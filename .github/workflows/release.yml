---
name: "Build Dymension release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Specify the version"
        required: true
        default: "v2.0.0-alpha.7"
  pull_request:
    branches:
      - "master"

permissions:
  contents: "write"

env:
  DYMENSION_VERSION: "${{ inputs.version || 'v2.0.0-alpha.7' }}"

jobs:
  build:
    name: "Build"
    runs-on: "ubuntu-latest-l"
    steps:
      - id: "setup-go"
        name: "Setup Go"
        uses: "actions/setup-go@v5"
        with:
          go-version: "1.21"

      - id: "setup-dependencies"
        name: "Install required system packages"
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends build-essential curl git musl-dev

      - id: "clone-pipeline"
        name: "Clone pipeline"
        uses: "actions/checkout@v4"
        with:
          path: "pipeline"

      - id: "clone"
        name: "Clone Dymension source"
        uses: "actions/checkout@v4"
        with:
          repository: "dymensionxyz/dymension"
          fetch-tags: true
          path: "dymension"
          ref: "refs/tags/${{ env.DYMENSION_VERSION }}"
          submodules: true

      - id: "apply-patches"
        name: "Apply patches"
        run: |
          set -euo pipefail
          shopt -s nullglob

          cd "${GITHUB_WORKSPACE}/dymension"
          git am --3way "${GITHUB_WORKSPACE}/pipeline/patches"/*.patch

      - id: "build"
        name: "Build dymd binary"
        run: |
          cd dymension

          make CC="x86_64-linux-musl-gcc" CGO_LDFLAGS="-L." LEDGER_ENABLED=false LINK_STATICALLY=true build

          # Smoke test
          ldd ./build/dymd || :
          ./build/dymd version --long

      - id: "upload-artifact"
        name: "Save binary to workspace"
        uses: "actions/upload-artifact@v3"
        with:
          name: "dymension"
          path: "dymension/build/dymd"
          if-no-files-found: "error"
          retention-days: 1

  publish:
    name: "Publish"
    needs: "build"
    runs-on: "ubuntu-latest"
    if: "${{ github.event_name == 'workflow_dispatch' }}"
    steps:
      - id: "download-artifact"
        name: "Download binary from workspace"
        uses: "actions/download-artifact@v3"
        with:
          name: "dymension"
          path: "binaries"

      - id: "publish"
        name: "Publish Github release"
        uses: "softprops/action-gh-release@v1"
        with:
          body: |
            For changes, see here: https://github.com/dymensionxyz/dymension/releases/tag/${{ env.DYMENSION_VERSION }}
          files: |
            binaries/dymd
          tag_name: "${{ env.DYMENSION_VERSION }}"
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          generate_release_notes: true
